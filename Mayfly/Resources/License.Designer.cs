//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class License {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal License() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Resources.License", typeof(License).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key failed.
        /// </summary>
        public static string LicenseCancelled {
            get {
                return ResourceManager.GetString("LicenseCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License expired.
        /// </summary>
        public static string LicenseExpired {
            get {
                return ResourceManager.GetString("LicenseExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License for {0} expired. Renew subscription to stay tuned..
        /// </summary>
        public static string LicenseExpiredInstruction {
            get {
                return ResourceManager.GetString("LicenseExpiredInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License expires soon.
        /// </summary>
        public static string LicenseExpiresSoon {
            get {
                return ResourceManager.GetString("LicenseExpiresSoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License for {0} expires {1}. Renew subscription to stay tuned..
        /// </summary>
        public static string LicenseExpiresSoonInstruction {
            get {
                return ResourceManager.GetString("LicenseExpiresSoonInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in {0} days.
        /// </summary>
        public static string LicenseExpiresSoonInstructionIn {
            get {
                return ResourceManager.GetString("LicenseExpiresSoonInstructionIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to today.
        /// </summary>
        public static string LicenseExpiresSoonInstructionToday {
            get {
                return ResourceManager.GetString("LicenseExpiresSoonInstructionToday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key is installed already.
        /// </summary>
        public static string LicenseInstalledInstruction {
            get {
                return ResourceManager.GetString("LicenseInstalledInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not activated yet.
        /// </summary>
        public static string LicenseNotActivated {
            get {
                return ResourceManager.GetString("LicenseNotActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong Key.
        /// </summary>
        public static string LicenseWrong {
            get {
                return ResourceManager.GetString("LicenseWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key is granted to other user.
        /// </summary>
        public static string LicenseWrongOwnerInstruction {
            get {
                return ResourceManager.GetString("LicenseWrongOwnerInstruction", resourceCulture);
            }
        }
    }
}
