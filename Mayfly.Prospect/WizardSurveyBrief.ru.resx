<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="wizardControl1.CancelButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="wizardControl1.FinishButtonText" xml:space="preserve">
    <value>Отчет</value>
  </data>
  <data name="wizardControl1.NextButtonText" xml:space="preserve">
    <value>Далее</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="labelSlope.Size" type="System.Drawing.Size, System.Drawing">
    <value>112, 15</value>
  </data>
  <data name="labelSlope.Text" xml:space="preserve">
    <value>Средний уклон, ‰</value>
  </data>
  <data name="labelVolume.Size" type="System.Drawing.Size, System.Drawing">
    <value>105, 15</value>
  </data>
  <data name="labelVolume.Text" xml:space="preserve">
    <value>Годовой сток, км³</value>
  </data>
  <data name="labelSpend.Size" type="System.Drawing.Size, System.Drawing">
    <value>146, 15</value>
  </data>
  <data name="labelSpend.Text" xml:space="preserve">
    <value>Расход воды в устье, м³/с</value>
  </data>
  <data name="labelWatershed.Size" type="System.Drawing.Size, System.Drawing">
    <value>220, 15</value>
  </data>
  <data name="labelWatershed.Text" xml:space="preserve">
    <value>Площадь водосборного бассейна, км²</value>
  </data>
  <data name="labelLength.Size" type="System.Drawing.Size, System.Drawing">
    <value>63, 15</value>
  </data>
  <data name="labelLength.Text" xml:space="preserve">
    <value>Длина, км</value>
  </data>
  <data name="labelWaterInstruction.Text" xml:space="preserve">
    <value>{0} - {1} ({2}). Описание водного объекта из гидрологического справочника приводится ниже.</value>
  </data>
  <data name="pageWater.Text" xml:space="preserve">
    <value>Гидрографическое описание {0}</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Конкретные участки, которые были обследованы, имеют следующие характеристики:</value>
  </data>
  <data name="label16.Size" type="System.Drawing.Size, System.Drawing">
    <value>105, 15</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>Местоположение</value>
  </data>
  <data name="label15.Size" type="System.Drawing.Size, System.Drawing">
    <value>133, 15</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>Скорости течения, м/с</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>71, 15</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Глубины, м</value>
  </data>
  <data name="pagePlankton.Text" xml:space="preserve">
    <value>Обзор планктонных сообществ</value>
  </data>
  <data name="columnBenTaxa.HeaderText" xml:space="preserve">
    <value>Вид / таксон</value>
  </data>
  <data name="columnBenA.HeaderText" xml:space="preserve">
    <value>Численность, экз./м²</value>
  </data>
  <data name="columnBenAP.HeaderText" xml:space="preserve">
    <value>Численность, %</value>
  </data>
  <data name="columnBenB.HeaderText" xml:space="preserve">
    <value>Биомасса, г/м²</value>
  </data>
  <data name="columnBenBP.HeaderText" xml:space="preserve">
    <value>Биомасса, %</value>
  </data>
  <data name="label17.Size" type="System.Drawing.Size, System.Drawing">
    <value>80, 15</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>Структура по</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>135, 15</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Общая биомасса, г/м²:</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>167, 15</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Общая численность, экз./м²:</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Список  видов/таксонов зообентоса, отмеченных в водном объекте приведен ниже. Выберите основание для выделения таксонов, чтобы увидеть соответствующую структуру.</value>
  </data>
  <data name="pageBenthos.Text" xml:space="preserve">
    <value>Обзор бентических сообществ</value>
  </data>
  <data name="labelCategoryInstruction.Text" xml:space="preserve">
    <value>Простейшей информацией о рыбных сообществах является список обнаруженных в водном объекте видов. Приводим его ниже:</value>
  </data>
  <data name="columnHeaderSpecies.Text" xml:space="preserve">
    <value>Вид</value>
  </data>
  <data name="columnHeaderSample.Text" xml:space="preserve">
    <value>Выборка</value>
  </data>
  <data name="pageSpeciesList.Text" xml:space="preserve">
    <value>Виды рыб</value>
  </data>
  <data name="labelGear.Size" type="System.Drawing.Size, System.Drawing">
    <value>74, 15</value>
  </data>
  <data name="labelGear.Text" xml:space="preserve">
    <value>Тип орудий:</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Поскольку сравнение уловов разных орудий лова невозможно, вам необходимо выбрать тип орудия, чтобы оценить видовую структуру уловов.</value>
  </data>
  <data name="ColumnCatchesSpecies.HeaderText" xml:space="preserve">
    <value>Вид</value>
  </data>
  <data name="ColumnCatchesAbundance.HeaderText" xml:space="preserve">
    <value>Численность, экз./{0}</value>
  </data>
  <data name="ColumnCatchesAbundanceP.HeaderText" xml:space="preserve">
    <value>Численность, %</value>
  </data>
  <data name="ColumnCatchesBiomass.HeaderText" xml:space="preserve">
    <value>Биомасса, кг/{0}</value>
  </data>
  <data name="ColumnCatchesBiomassP.HeaderText" xml:space="preserve">
    <value>Биомасса, %</value>
  </data>
  <data name="pageSpeciesComposition.Text" xml:space="preserve">
    <value>Структура уловов</value>
  </data>
  <data name="buttonExplorePlankton.Text" xml:space="preserve">
    <value>Подробнее о планктоне...</value>
  </data>
  <data name="buttonExploreBenthos.Text" xml:space="preserve">
    <value>Подробнее о бентосе...</value>
  </data>
  <data name="buttonExploreFish.Text" xml:space="preserve">
    <value>Подробнее о рыбе...</value>
  </data>
  <data name="labelDone.Text" xml:space="preserve">
    <value>Вы ознакомились со всей сводкой. 
Теперь вы можете распечатать ее или ознакомиться с ней более подробно.</value>
  </data>
  <data name="buttonReport.Text" xml:space="preserve">
    <value>Печать сводки</value>
  </data>
  <data name="pageFinish.Text" xml:space="preserve">
    <value>Сводка завершена</value>
  </data>
  <data name="wizardControl1.Title" xml:space="preserve">
    <value>Сводка по исследованиям</value>
  </data>
</root>