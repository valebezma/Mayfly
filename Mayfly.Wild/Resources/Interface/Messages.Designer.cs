//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Wild.Resources.Interface {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Wild.Resources.Interface.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad age data.
        /// </summary>
        public static string AgeInacceptable {
            get {
                return ResourceManager.GetString("AgeInacceptable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Age data is lacking, so age analysis was not obtained..
        /// </summary>
        public static string AgeInacceptableInstruction {
            get {
                return ResourceManager.GetString("AgeInacceptableInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Card is already opened.
        /// </summary>
        public static string AlreadyOpened {
            get {
                return ResourceManager.GetString("AlreadyOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your data does not contain any artefacts.
        /// </summary>
        public static string ArtefactsNoneNotification {
            get {
                return ResourceManager.GetString("ArtefactsNoneNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data loaded to explorer is of very high quality. You can use it in any analysis..
        /// </summary>
        public static string ArtefactsNoneNotificationInstruction {
            get {
                return ResourceManager.GetString("ArtefactsNoneNotificationInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Artefacts found in your data.
        /// </summary>
        public static string ArtefactsNotification {
            get {
                return ResourceManager.GetString("ArtefactsNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to explore artefacts in your data. We recommend to eliminate artefacts from your data before analisys.
        /// </summary>
        public static string ArtefactsNotificationInstruction {
            get {
                return ResourceManager.GetString("ArtefactsNotificationInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current list of recent species contains {0} records. Do you want to clear it anyway?.
        /// </summary>
        public static string ClearRecent {
            get {
                return ResourceManager.GetString("ClearRecent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} records sumed up.
        /// </summary>
        public static string DuplicateSummed {
            get {
                return ResourceManager.GetString("DuplicateSummed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Factor name is strongly required.
        /// </summary>
        public static string FactorNameRequired {
            get {
                return ResourceManager.GetString("FactorNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm changind identification from &quot;{0}&quot; to &quot;{1}&quot;. If species entry doen&apos;s exist in card, it will be created..
        /// </summary>
        public static string IndRename {
            get {
                return ResourceManager.GetString("IndRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm replacing selected log entry from &quot;{0}&quot; to &quot;{1}&quot;. If species entry doesn&apos;t exist, it will be created..
        /// </summary>
        public static string LogRename {
            get {
                return ResourceManager.GetString("LogRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single specimen mass overtops total.
        /// </summary>
        public static string MassInequal {
            get {
                return ResourceManager.GetString("MassInequal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single specimen count equals total.
        /// </summary>
        public static string QuantityEqual {
            get {
                return ResourceManager.GetString("QuantityEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Both single specimen count and total equal {0} inds..
        /// </summary>
        public static string QuantityEqualDetails {
            get {
                return ResourceManager.GetString("QuantityEqualDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single specimen count overtops total.
        /// </summary>
        public static string QuantityInequal {
            get {
                return ResourceManager.GetString("QuantityInequal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single specimen count is {0} but specified total is {1} inds.
        ///Double click to adjust total.
        /// </summary>
        public static string QuantitySetEqual {
            get {
                return ResourceManager.GetString("QuantitySetEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Card is saved.
        /// </summary>
        public static string Saved {
            get {
                return ResourceManager.GetString("Saved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} added.
        /// </summary>
        public static string SpeciesAdded {
            get {
                return ResourceManager.GetString("SpeciesAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm renaming &quot;{0}&quot; to &quot;{1}&quot; in all of loaded cards..
        /// </summary>
        public static string SpeciesRename {
            get {
                return ResourceManager.GetString("SpeciesRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Water object is specified.
        /// </summary>
        public static string WaterSet {
            get {
                return ResourceManager.GetString("WaterSet", resourceCulture);
            }
        }
    }
}
