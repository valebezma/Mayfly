//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Fish.Explorer.Resources.Reports {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Extrapolation {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Extrapolation() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Fish.Explorer.Resources.Reports.Extrapolation", typeof(Extrapolation).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catch.
        /// </summary>
        internal static string ColumnCatch {
            get {
                return ResourceManager.GetString("ColumnCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPUE.
        /// </summary>
        internal static string ColumnCpue {
            get {
                return ResourceManager.GetString("ColumnCpue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mass in stock, kg.
        /// </summary>
        internal static string ColumnStockB {
            get {
                return ResourceManager.GetString("ColumnStockB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quantity in stock, ind..
        /// </summary>
        internal static string ColumnStockN {
            get {
                return ResourceManager.GetString("ColumnStockN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structure of {0} stock is estimated by catches of {1} and studiing of population {2} composition..
        /// </summary>
        internal static string Paragraph1 {
            get {
                return ResourceManager.GetString("Paragraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} structure of {0} stock con not be estimated because of the lack of data..
        /// </summary>
        internal static string Paragraph1_None {
            get {
                return ResourceManager.GetString("Paragraph1_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abundance and biomass of species is calculated as follows: catch per effort (both quantitative and by mass) averaged between all gear classes and then divided by catchability, which for {0} equals {1:N3}. Catch per effort for gear classes have caught {2} are given in table {3}..
        /// </summary>
        internal static string Paragraph2 {
            get {
                return ResourceManager.GetString("Paragraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Catches also reduced according to spatial ratios which reflect part of water where gear class can be used (see table {3})..
        /// </summary>
        internal static string Paragraph2_1 {
            get {
                return ResourceManager.GetString("Paragraph2_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abundance and biomass of species is calculated as follows: catch per effort (both quantitative and by mass, {0:N3} {1} and {2:N3} {3} respectively) divided by catchability, which for {4} equals {5:N3}..
        /// </summary>
        internal static string Paragraph3 {
            get {
                return ResourceManager.GetString("Paragraph3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abundance and biomass is now available to calculate, so:.
        /// </summary>
        internal static string Paragraph4 {
            get {
                return ResourceManager.GetString("Paragraph4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume of water equals {0:N0} m³ while according to currently used settings 1 {1} equals {2:N1} m³..
        /// </summary>
        internal static string Paragraph5_E {
            get {
                return ResourceManager.GetString("Paragraph5_E", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Square of water equals {0:N1} ha..
        /// </summary>
        internal static string Paragraph5_S {
            get {
                return ResourceManager.GetString("Paragraph5_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume of water equals {0:N1} ths m³..
        /// </summary>
        internal static string Paragraph5_V {
            get {
                return ResourceManager.GetString("Paragraph5_V", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now we can extrapolate these abundance values on whole water. {0} So, number and mass of {1} stock are:.
        /// </summary>
        internal static string Paragraph6 {
            get {
                return ResourceManager.GetString("Paragraph6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Composition of stock based on estimated population composition is given in table {0}..
        /// </summary>
        internal static string Paragraph7 {
            get {
                return ResourceManager.GetString("Paragraph7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total quantity of {0} categories {1} equals {2:N0} ind., mass — {3:N1} kg..
        /// </summary>
        internal static string Paragraph8 {
            get {
                return ResourceManager.GetString("Paragraph8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Efforts of gear classes also multiplied with its spatial ratios reflecting part of water available for gear class to be applied (see table {5})..
        /// </summary>
        internal static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPUE of {0} in different gear classes of {1}.
        /// </summary>
        internal static string Table1 {
            get {
                return ResourceManager.GetString("Table1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Composition of stock, based on population {0} composition.
        /// </summary>
        internal static string Table2 {
            get {
                return ResourceManager.GetString("Table2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estimation of {0} stock by extrapolation method.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
    }
}
