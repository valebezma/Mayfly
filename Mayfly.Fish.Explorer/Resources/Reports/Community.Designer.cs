//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Fish.Explorer.Resources.Reports {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Community {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Community() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Fish.Explorer.Resources.Reports.Community", typeof(Community).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quantity and mass of species in catches of different gear class.
        /// </summary>
        public static string AppA {
            get {
                return ResourceManager.GetString("AppA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CPUE of species of different gear class.
        /// </summary>
        public static string AppB {
            get {
                return ResourceManager.GetString("AppB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Special composition in catches of different gear class.
        /// </summary>
        public static string AppC {
            get {
                return ResourceManager.GetString("AppC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Appendices. Routines for abundance and biomass calculations..
        /// </summary>
        public static string AppendixAbundance {
            get {
                return ResourceManager.GetString("AppendixAbundance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Appendices. Source data for calculation averaged catches composition..
        /// </summary>
        public static string AppendixCpue {
            get {
                return ResourceManager.GetString("AppendixCpue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Catchability.
        /// </summary>
        public static string Catchability {
            get {
                return ResourceManager.GetString("Catchability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на * – CPUE displays species presence in a harvest of 1 {0}..
        /// </summary>
        public static string CatchesNotice {
            get {
                return ResourceManager.GetString("CatchesNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ** – Abundance and biomass displays species presence in a piece of natural habitat equivalent to 1 {0} (which is {1:N1} {2})..
        /// </summary>
        public static string CommunityNotice {
            get {
                return ResourceManager.GetString("CommunityNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на * – Dominance index is calculated as described in ({0})..
        /// </summary>
        public static string CommunityNoticeDominance {
            get {
                return ResourceManager.GetString("CommunityNoticeDominance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There are {0} species registered in catches. Most numerous sample is of {1} ({2} ind., which is {3:P1} of total sample). Species&apos; samples sizes and also biological estimates are given in table {4}..
        /// </summary>
        public static string ParagraphBio {
            get {
                return ResourceManager.GetString("ParagraphBio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Species catches (expressed in number and mass) per unit of efforts (CPUE) (uncluding spatial ratio, i. e. part of water that can be harvested with gears of corresponding class) and composition of catches are presented in table {0}. Also fractions of juveniles and both genders for each species are given..
        /// </summary>
        public static string ParagraphCatches {
            get {
                return ResourceManager.GetString("ParagraphCatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Community composition is based on estimated abundance and biomass of each species . These values are computed as follows: in each gear class CPUE of species summed for all gear classes and divided by catchability for {0}:.
        /// </summary>
        public static string ParagraphCommunity1 {
            get {
                return ResourceManager.GetString("ParagraphCommunity1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на where CPUE — catch per effort, q — catchability. 
        ///Resulting abundances and biomasses of all species and estimated composition of community are given in table {0}. Also occurrence and dominance indices are given..
        /// </summary>
        public static string ParagraphCommunity2 {
            get {
                return ResourceManager.GetString("ParagraphCommunity2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Community diversity is estimated as described in ({0}) and equals {1}.
        ///Calculations of each species abundance and biomass are given in appendices..
        /// </summary>
        public static string ParagraphCommunity3 {
            get {
                return ResourceManager.GetString("ParagraphCommunity3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sample sizes and basic biological parameters of species.
        /// </summary>
        public static string TableBio {
            get {
                return ResourceManager.GetString("TableBio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Catches composition.
        /// </summary>
        public static string TableCatches {
            get {
                return ResourceManager.GetString("TableCatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Community composition.
        /// </summary>
        public static string TableCommunity {
            get {
                return ResourceManager.GetString("TableCommunity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Community composition estimate.
        /// </summary>
        public static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
    }
}
