//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Fish.Explorer.Resources.Reports.Section {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Cenosis {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Cenosis() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Fish.Explorer.Resources.Reports.Section.Cenosis", typeof(Cenosis).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catchability.
        /// </summary>
        public static string ColumnCatchability {
            get {
                return ResourceManager.GetString("ColumnCatchability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * – Dominance index is calculated as described in ({0})..
        /// </summary>
        public static string Notice_1 {
            get {
                return ResourceManager.GetString("Notice_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ** – Abundance and biomass displays species presence in a piece of natural habitat equivalent to 1 {0} (which is {1:N1} {2})..
        /// </summary>
        public static string Notice_2 {
            get {
                return ResourceManager.GetString("Notice_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cenosis composition is based on estimated abundance and biomass of each species . These values are computed as follows: in each gear class CPUE of species summed for all gear classes and divided by catchability for {0}:.
        /// </summary>
        public static string Paragraph_1 {
            get {
                return ResourceManager.GetString("Paragraph_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to where CPUE — catch per effort, q — catchability. 
        ///Resulting abundances and biomasses of all species and estimated composition of cenosis are given in table {0}. Also occurrence and dominance indices are given..
        /// </summary>
        public static string Paragraph_2 {
            get {
                return ResourceManager.GetString("Paragraph_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cenosis diversity is estimated as described in ({0}) and equals {1}.
        ///Calculations of each species abundance and biomass are given in appendices..
        /// </summary>
        public static string Paragraph_3 {
            get {
                return ResourceManager.GetString("Paragraph_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiled Cenosis Summary.
        /// </summary>
        public static string Subtitle {
            get {
                return ResourceManager.GetString("Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cenosis composition.
        /// </summary>
        public static string Table_1 {
            get {
                return ResourceManager.GetString("Table_1", resourceCulture);
            }
        }
    }
}
