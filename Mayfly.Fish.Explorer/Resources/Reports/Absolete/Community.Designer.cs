//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Fish.Explorer.Resources.Reports.Absolete {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Community {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Community() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Fish.Explorer.Resources.Reports.Absolete.Community", typeof(Community).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appendices. Source data for calculation averaged catches composition..
        /// </summary>
        public static string AppendixCpue {
            get {
                return ResourceManager.GetString("AppendixCpue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catchability.
        /// </summary>
        public static string Catchability {
            get {
                return ResourceManager.GetString("Catchability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * – CPUE displays species presence in a harvest of 1 {0}..
        /// </summary>
        public static string CatchesNotice {
            get {
                return ResourceManager.GetString("CatchesNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ** – Abundance and biomass displays species presence in a piece of natural habitat equivalent to 1 {0} (which is {1:N1} {2})..
        /// </summary>
        public static string CenosisNotice {
            get {
                return ResourceManager.GetString("CenosisNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * – Dominance index is calculated as described in ({0})..
        /// </summary>
        public static string CenosisNoticeDominance {
            get {
                return ResourceManager.GetString("CenosisNoticeDominance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Species catches (expressed in number and mass) per unit of efforts (CPUE) (uncluding spatial ratio, i. e. part of water that can be harvested with gears of corresponding class) and composition of catches are presented in table {0}. Also fractions of juveniles and both genders for each species are given..
        /// </summary>
        public static string ParagraphCatches {
            get {
                return ResourceManager.GetString("ParagraphCatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cenosis composition is based on estimated abundance and biomass of each species . These values are computed as follows: in each gear class CPUE of species summed for all gear classes and divided by catchability for {0}:.
        /// </summary>
        public static string ParagraphCenosis1 {
            get {
                return ResourceManager.GetString("ParagraphCenosis1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to where CPUE — catch per effort, q — catchability. 
        ///Resulting abundances and biomasses of all species and estimated composition of cenosis are given in table {0}. Also occurrence and dominance indices are given..
        /// </summary>
        public static string ParagraphCenosis2 {
            get {
                return ResourceManager.GetString("ParagraphCenosis2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cenosis diversity is estimated as described in ({0}) and equals {1}.
        ///Calculations of each species abundance and biomass are given in appendices..
        /// </summary>
        public static string ParagraphCenosis3 {
            get {
                return ResourceManager.GetString("ParagraphCenosis3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cenosis composition.
        /// </summary>
        public static string TableCenosis {
            get {
                return ResourceManager.GetString("TableCenosis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiled cenosis summary.
        /// </summary>
        public static string Title_3 {
            get {
                return ResourceManager.GetString("Title_3", resourceCulture);
            }
        }
    }
}
