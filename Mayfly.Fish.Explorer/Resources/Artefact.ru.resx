<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArtefactsFound" xml:space="preserve">
    <value>В данных обнаружены некоторые артефакты.</value>
  </data>
  <data name="CardEffort" xml:space="preserve">
    <value>В карточке указано недостаточно информации,
чтобы рассчитать рыболовное усилие</value>
  </data>
  <data name="IndividualRegID" xml:space="preserve">
    <value>Имеет номер пробы #{0}, но не содержит никакой информации, т. е. ни возраста, ни плодовитости, ни данных по питанию или паразитологических сведений</value>
  </data>
  <data name="IndividualsRegID" xml:space="preserve">
    <value>Записи {0} особей имеют номер пробы, но не содержат никакой информации, т. е. ни возраста, ни плодовитости, ни данных по питанию или паразитологических сведений</value>
  </data>
  <data name="IndividualsTreat" xml:space="preserve">
    <value>{0} проба (т. е. возраст, плодовитость, питания или паразитология) не имеют номера</value>
  </data>
  <data name="IndividualsUnweightedDiet" xml:space="preserve">
    <value>В {0} пробах питания есть невзвешенные особей. Воспользуйтесь "Мастером восстановления массы", чтобы исправить это</value>
  </data>
  <data name="IndividualTreat" xml:space="preserve">
    <value>Проба (т. е. возраст, плодовитость, питания или паразитология) не имеет номера пробы</value>
  </data>
  <data name="IndividualUnweightedDiet" xml:space="preserve">
    <value>В пробе питания есть {0} невзвешенных особей. Воспользуйтесь ХХХ</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Длина {0} особей не измерена.
Эти особи не могут быть учтены</value>
  </data>
  <data name="Specimen" xml:space="preserve">
    <value>Общая выборка {0} указана в количестве {1} экз., но в  журнале особей указаны {2} экз. и в 
стратифицированных пробах указаны {3} экз., таким образом {4} экз. не хватает</value>
  </data>
  <data name="CardMassOdd" xml:space="preserve">
    <value>Масса пробы (массы в журнале особей и стратифицированных пробах) на {0:N3} кг или {1:P1} превышает общую массу улова в карточке ({2:N3} кг)</value>
  </data>
  <data name="SpecimenUnable" xml:space="preserve">
    <value>Количество особей не может быть вычислено, т. к. в некоторых карточках оно не указано</value>
  </data>
  <data name="ValueHasRunouts" xml:space="preserve">
    <value>{0} {1} особей значительно отклоняется от общей выборки</value>
  </data>
  <data name="ValueIsCritical" xml:space="preserve">
    <value>{0} {1} особей не может быть вычислен, т. к. общая выборка слишком мала, чтобы построить модель</value>
  </data>
  <data name="ValueIsRecoverable" xml:space="preserve">
    <value>{0} {1} особей вычислен по длине</value>
  </data>
  <data name="ValueIsRecoverableButHasRunouts" xml:space="preserve">
    <value>{0} {1} особей вычислен по длине (однако, модель содержит {2} значительных вылетов)</value>
  </data>
  <data name="CardMassEven" xml:space="preserve">
    <value>Масса, указанная в карточке, совпадает с массой пробы 
(массой в журнале особей и стратифицированных пробах)</value>
  </data>
  <data name="CardMassOdd_1" xml:space="preserve">
    <value>{0} из {1} кг ({2:P1}) рыбы в улове не обработано</value>
  </data>
</root>