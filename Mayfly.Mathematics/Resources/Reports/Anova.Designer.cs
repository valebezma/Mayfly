//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Mathematics.Resources.Reports {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Anova {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Anova() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Mathematics.Resources.Reports.Anova", typeof(Anova).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Homogeneity test.
        /// </summary>
        internal static string HeaderHomogeneity {
            get {
                return ResourceManager.GetString("HeaderHomogeneity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Normality test.
        /// </summary>
        internal static string HeaderNormality {
            get {
                return ResourceManager.GetString("HeaderNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pairwise comparisons by {0}.
        /// </summary>
        internal static string HeaderPairwise {
            get {
                return ResourceManager.GetString("HeaderPairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each factor and each factors combination impact on {0} were estimated. Results are given in table {1}. Factors that significantly has impact on {2} are highlighted..
        /// </summary>
        internal static string parAnova {
            get {
                return ResourceManager.GetString("parAnova", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на According to calculated ANOVA results significant difference equals {0:G2} or more. All pairwise comparisons are presented in table {1}. Significant differences are highlighted..
        /// </summary>
        internal static string parFactor {
            get {
                return ResourceManager.GetString("parFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Homoscedasticity of subsamples was estimated by {0} which equals {1}.
        /// </summary>
        internal static string parHomogeneity {
            get {
                return ResourceManager.GetString("parHomogeneity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To inspect all of estimated subsamples to be normally distributed we used {0}. Subsamples basic descriptives and normality statistics are given in table {1}..
        /// </summary>
        internal static string parNormality {
            get {
                return ResourceManager.GetString("parNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на We will find exact pairs of factor values that vary significantly using {0} with alpha equals {1}..
        /// </summary>
        internal static string parPairwise {
            get {
                return ResourceManager.GetString("parPairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Here are rutines and results of estimation of factors ({0}) impact on {1}..
        /// </summary>
        internal static string parStart {
            get {
                return ResourceManager.GetString("parStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Subgroups descriptive statistics and normality estimates.
        /// </summary>
        internal static string tbNormality {
            get {
                return ResourceManager.GetString("tbNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pairwise comparisons of subsamples by {0}.
        /// </summary>
        internal static string tbPairwise {
            get {
                return ResourceManager.GetString("tbPairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Anova results table.
        /// </summary>
        internal static string tbResults {
            get {
                return ResourceManager.GetString("tbResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Normality probability (with {0}).
        /// </summary>
        internal static string thNormality {
            get {
                return ResourceManager.GetString("thNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Subgroup.
        /// </summary>
        internal static string thSubgroup {
            get {
                return ResourceManager.GetString("thSubgroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Anova results.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assumptions tests.
        /// </summary>
        internal static string TitleAssumptions {
            get {
                return ResourceManager.GetString("TitleAssumptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Finding particular effects.
        /// </summary>
        internal static string TitlePairwise {
            get {
                return ResourceManager.GetString("TitlePairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Anova calculation.
        /// </summary>
        internal static string TitleResults {
            get {
                return ResourceManager.GetString("TitleResults", resourceCulture);
            }
        }
    }
}
