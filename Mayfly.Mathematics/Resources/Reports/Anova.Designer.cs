//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mayfly.Mathematics.Resources.Reports {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Anova {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Anova() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mayfly.Mathematics.Resources.Reports.Anova", typeof(Anova).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Homogeneity test.
        /// </summary>
        internal static string HeaderHomogeneity {
            get {
                return ResourceManager.GetString("HeaderHomogeneity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normality test.
        /// </summary>
        internal static string HeaderNormality {
            get {
                return ResourceManager.GetString("HeaderNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pairwise comparisons by {0}.
        /// </summary>
        internal static string HeaderPairwise {
            get {
                return ResourceManager.GetString("HeaderPairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each factor and each factors combination impact on {0} were estimated. Results are given in table {1}. Factors that significantly has impact on {2} are highlighted..
        /// </summary>
        internal static string parAnova {
            get {
                return ResourceManager.GetString("parAnova", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to According to calculated ANOVA results significant difference equals {0:G2} or more. All pairwise comparisons are presented in table {1}. Significant differences are highlighted..
        /// </summary>
        internal static string parFactor {
            get {
                return ResourceManager.GetString("parFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Homoscedasticity of subsamples was estimated by {0} which equals {1}.
        /// </summary>
        internal static string parHomogeneity {
            get {
                return ResourceManager.GetString("parHomogeneity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To inspect all of estimated subsamples to be normally distributed we used {0}. Subsamples basic descriptives and normality statistics are given in table {1}..
        /// </summary>
        internal static string parNormality {
            get {
                return ResourceManager.GetString("parNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We will find exact pairs of factor values that vary significantly using {0} with alpha equals {1}..
        /// </summary>
        internal static string parPairwise {
            get {
                return ResourceManager.GetString("parPairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are rutines and results of estimation of factors ({0}) impact on {1}..
        /// </summary>
        internal static string parStart {
            get {
                return ResourceManager.GetString("parStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subgroups descriptive statistics and normality estimates.
        /// </summary>
        internal static string tbNormality {
            get {
                return ResourceManager.GetString("tbNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pairwise comparisons of subsamples by {0}.
        /// </summary>
        internal static string tbPairwise {
            get {
                return ResourceManager.GetString("tbPairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anova results table.
        /// </summary>
        internal static string tbResults {
            get {
                return ResourceManager.GetString("tbResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normality probability (with {0}).
        /// </summary>
        internal static string thNormality {
            get {
                return ResourceManager.GetString("thNormality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subgroup.
        /// </summary>
        internal static string thSubgroup {
            get {
                return ResourceManager.GetString("thSubgroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anova results.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assumptions tests.
        /// </summary>
        internal static string TitleAssumptions {
            get {
                return ResourceManager.GetString("TitleAssumptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finding particular effects.
        /// </summary>
        internal static string TitlePairwise {
            get {
                return ResourceManager.GetString("TitlePairwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anova calculation.
        /// </summary>
        internal static string TitleResults {
            get {
                return ResourceManager.GetString("TitleResults", resourceCulture);
            }
        }
    }
}
